Question,Option A,Option B,Option C,Option D,Correct Answer,Explanation
What is the primary mechanism used by adversaries to hijack the execution flow through dynamic linker hijacking? (Enterprise),Modifying shared library loading paths,Exploiting vulnerabilities in dynamic linkers,Adding malicious code to system libraries,Modifying environment variables,D,Adversaries manipulate environment variables like LD_PRELOAD or DYLD_INSERT_LIBRARIES to load their malicious libraries before legitimate ones.,Dynamic linker hijacking relies on manipulating environment variables to load malicious libraries, not on exploiting vulnerabilities in the dynamic linker itself. Modifying system libraries directly is a separate attack vector. While modifying shared library loading paths can be a consequence of dynamic linker hijacking, it's not the primary mechanism.
What is a key reason why dynamic linker hijacking might evade detection by security products? (Enterprise),It exploits zero-day vulnerabilities,It hides malicious activity within a legitimate process,It relies on social engineering techniques,It targets specific network protocols,B,Dynamic linker hijacking can evade detection by masking malicious code as legitimate process activity, making it difficult for security products to identify the true nature of the execution.,The primary reason for evasion is the masking of malicious activity, not exploiting zero-day vulnerabilities, social engineering, or targeting specific protocols.
Which of the following is NOT a common technique used by adversaries to set environment variables for dynamic linker hijacking? (Enterprise),Using the export command,Adding malicious code to shared libraries,Utilizing the putenv function,Leveraging scripting languages like Python,B,Adding malicious code to shared libraries is not a technique for setting environment variables; it involves manipulating the libraries themselves.,While other options are methods for setting environment variables, adding malicious code to shared libraries is a separate step in the attack process.
Which of the following MITRE ATT&CK techniques is directly related to Dynamic Linker Hijacking? (Enterprise),T1105,T1106,T1110,T1115,C,T1110: Hijack Execution Flow is the specific technique associated with Dynamic Linker Hijacking.,The MITRE ATT&CK technique T1110 covers the broad concept of hijacking execution flow, including Dynamic Linker Hijacking. Other techniques listed are related to different attack vectors.
Which of the following is a defensive measure specifically targeted at mitigating Dynamic Linker Hijacking on macOS? (Mobile),Disabling SIP (System Integrity Protection),Enabling sandboxing for all applications,Using a robust anti-virus solution,Implementing strong password policies,A,Disabling SIP removes protection against modifications to environment variables, exposing the system to dynamic linker hijacking.,Disabling SIP weakens macOS security and makes it more vulnerable to Dynamic Linker Hijacking. While other options contribute to overall security, they are not directly focused on mitigating this specific technique.
What is the purpose of monitoring library metadata during threat detection for Dynamic Linker Hijacking? (Enterprise),Identifying unauthorized modifications to shared libraries,Detecting changes to file permissions,Monitoring network traffic patterns,Analyzing user activity logs,A,Monitoring library metadata like hashes helps identify unauthorized changes to libraries that may have been injected or tampered with.,This monitoring helps detect changes that might not be obvious through other techniques. While other options are relevant to security, they are not directly related to library metadata monitoring.
Which of the following is a common method for detecting Dynamic Linker Hijacking? (Enterprise),Monitoring for changes to environment variables,Analyzing network traffic for unusual patterns,Identifying suspicious user login attempts,Monitoring for changes to system configuration files,A,Monitoring for changes to environment variables associated with dynamic linker hijacking is a common detection method.,This direct monitoring allows for early detection of modifications that may indicate malicious activity. While other options contribute to overall security, they are not specifically targeted at Dynamic Linker Hijacking detection.
Which of the following scenarios best illustrates the potential impact of Dynamic Linker Hijacking on an ICS system? (ICS),Compromising a PLC's control logic to disrupt operations,Gaining access to sensitive SCADA data,Exploiting a vulnerability in a remote monitoring software,Modifying system time to disrupt critical processes,A,Compromising a PLC's control logic through dynamic linker hijacking could directly affect the operations of the ICS, causing potential disruption.,This scenario demonstrates the direct impact of hijacking on critical control systems. While other options are relevant to ICS security, they are not as direct a consequence of Dynamic Linker Hijacking.
Which of the following is a key security principle to prevent Dynamic Linker Hijacking? (Enterprise),Least privilege,Input validation,Network segmentation,Data encryption,A,Least privilege ensures that processes only have the permissions they need, reducing the potential impact of a successful Dynamic Linker Hijacking attack.,Limiting privileges restricts the malicious code's capabilities, even if it successfully hijacks the execution flow. While other options are important security principles, they are not as directly related to preventing this specific attack.
How can application control solutions be used to mitigate Dynamic Linker Hijacking? (Enterprise),By blocking potentially malicious libraries loaded by legitimate software,By enforcing strong password policies,By detecting and removing malware from the system,By monitoring network traffic for unusual patterns,A,Application control solutions can identify and block malicious libraries, preventing them from being loaded even if they are referenced in environment variables.,This approach allows for a proactive defense against hijacking attempts. While other options contribute to overall security, they are not directly related to blocking malicious libraries loaded through Dynamic Linker Hijacking.