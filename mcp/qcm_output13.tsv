Question,Option A,Option B,Option C,Option D,Correct Answer,Explanation
What is the main goal of Parent PID Spoofing, according to the provided text, in the context of MITRE ATT&CK Enterprise?,Bypass application whitelisting,Evade detection by process monitoring tools,Modify the PPID of a process to elevate privileges,All of the above,B,Parent PID Spoofing aims to evade detection by process monitoring tools, as mentioned in the text, by modifying the parent process identifier to appear as a benign process like "explorer.exe".
What MITRE ATT&CK Technique ID and name are associated with the Parent PID Spoofing tactic described in the text?,T1055.003 - Process Injection,T1136 - Create or Modify System Processes,T1055.001 - Parent PID Spoofing,T1055 - Process Injection,C,The text explicitly describes the technique as "Parent PID Spoofing", which is represented by the ID T1055.001.
According to the provided text, how can Parent PID Spoofing be used to gain elevated privileges within the MITRE ATT&CK Enterprise framework?,By exploiting vulnerabilities in the CreateProcess API,By spawning a new process with a PPID that has elevated permissions,By using a privileged user context to spawn a new process with SYSTEM as the PPID,By using the UpdateProcThreadAttribute API to modify process creation attributes,C,The text mentions that an adversary can spawn a new process and assign a parent process running as SYSTEM, inheriting elevated privileges.
Which of the following is NOT mentioned as a tool or framework that utilizes Parent PID Spoofing as a technique, based on the provided text?,DarkGate,Cobalt Strike,Metasploit,PipeMon,C,The text only mentions DarkGate, Cobalt Strike, and PipeMon as examples of frameworks that utilize Parent PID Spoofing.
What API call is typically exploited by adversaries to perform Parent PID Spoofing, as discussed in the MITRE ATT&CK Enterprise context?,CreateProcessA,UpdateProcThreadAttribute,NtQuerySystemInformation,NtCreateProcess,A,The text specifically highlights the CreateProcessA API call as the primary means for manipulating the PPID.
What process creation flag, in the context of the CreateProcess API, is an indicator of Parent PID Spoofing, according to the provided text, in the MITRE ATT&CK Enterprise framework?,0x8000,0x80000000,0x800000,0x8000000,C,The text indicates that the flag 0x800000 indicates extended startup information, which is associated with the use of Parent PID Spoofing.
Which of the following is NOT a potential mitigation against Parent PID Spoofing, based on the text, within the MITRE ATT&CK Enterprise context?,Implementing application whitelisting policies,Monitoring API calls related to process creation,Analyzing event logs for unusual parent-child process relationships,Comparing process creation data across different sources,D,While other options are mentioned as mitigation strategies, application whitelisting is not directly mentioned in the text as a specific countermeasure against Parent PID Spoofing.
According to the provided text, which data source provides the most reliable information about the actual parent process, in the context of MITRE ATT&CK Enterprise?,Windows event logs,Process Explorer,Task Manager,Event Tracing for Windows (ETW),D,The text explicitly mentions that the EventHeader ProcessId provided by ETW accurately identifies the real parent process.
Which of the following is a potential red flag for Parent PID Spoofing detection, based on the text, within the MITRE ATT&CK Enterprise framework?,A process spawned from a known legitimate application with an unusual PPID,A process spawned from an unexpected location on the system,A process with a high memory footprint,A process that attempts to access network resources,A,The text specifically mentions detecting processes spawned from legitimate applications with unusual PPIDs as a potential indicator of Parent PID Spoofing.
What is a possible limitation of using CreateProcess/CreateProcessA calls as an indicator of Parent PID Spoofing, according to the text, in the context of MITRE ATT&CK Enterprise?,These API calls can be used for legitimate system processes,They are not always used by attackers to perform Parent PID Spoofing,They are often difficult to monitor effectively,They may not provide enough information to identify the attacker,A,The text mentions that normal UAC elevation behavior may generate false positives, meaning the use of these API calls for legitimate purposes can lead to incorrect detection.