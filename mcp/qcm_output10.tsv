Question,Option A,Option B,Option C,Option D,Correct Answer,Explanation
What is the MITRE ATT&CK ID and technique name for duplicating an existing token to impersonate another user and bypass access controls, as described in the provided text?,T1078.002 - Steal or Forge Kerberos Tickets,T1134 - Access Token Manipulation,T1078.001 - Steal or Forge Web Tokens,T1078.005 - Access Token Manipulation: Token Impersonation/Theft,T1134,This technique specifically focuses on duplicating and impersonating existing tokens for privilege escalation.,
In the provided text, the adversary utilizes DuplicateToken or DuplicateTokenEx to duplicate the target user's existing token. Which API call can be used to assign the impersonated token to a thread, enabling the adversary to impersonate the user's security context?,ImpersonateLoggedOnUser,SetThreadToken,CreateProcessWithTokenW,CreateProcessAsUserW,SetThreadToken,SetThreadToken allows the assignment of an impersonated token to a thread, enabling the calling thread to impersonate the user's security context.,
The text discusses several adversary groups that have been observed utilizing Token Impersonation/Theft techniques. Which group has been documented as using CVE-2015-1701 to access the SYSTEM token and copy it into the current process as part of privilege escalation?,FIN8,APT28,Aria-body,BitPaymer,APT28,APT28 is specifically mentioned in the text as having used CVE-2015-1701 to access the SYSTEM token and copy it into the current process for privilege escalation.,
What is the key difference between Access Token Manipulation: Token Impersonation/Theft and Make and Impersonate Token, as described in the provided text?,Token Impersonation/Theft involves creating a new token, while Make and Impersonate Token duplicates an existing token.,Token Impersonation/Theft focuses on duplicating existing tokens, while Make and Impersonate Token creates new tokens.,Token Impersonation/Theft requires administrator privileges, while Make and Impersonate Token does not.,There is no difference between the two techniques.,Token Impersonation/Theft focuses on duplicating existing tokens, while Make and Impersonate Token creates new tokens.,The text explicitly states that Token Impersonation/Theft involves duplicating an existing token, while Make and Impersonate Token refers to creating a new token.,
The provided text describes how an adversary can utilize duplicated tokens to create a new process. Which API calls are specifically mentioned as methods for achieving this objective?,DuplicateTokenEx and ImpersonateLoggedOnUser,DuplicateToken and CreateProcessAsUserW,CreateProcessWithTokenW and CreateProcessAsUserW,SetThreadToken and ImpersonateLoggedOnUser,CreateProcessWithTokenW and CreateProcessAsUserW,The text mentions CreateProcessWithTokenW and CreateProcessAsUserW as API calls used to create a new process with a duplicated token.,
The text discusses the potential use of Token Impersonation/Theft in situations where the target user has a non-network logon session on the system. Why is this scenario particularly relevant to adversaries?,Because the adversary can impersonate the user without needing to interact with the network.,Because the user's token is not tied to a specific network connection.,Because the user's token is more easily accessible in this scenario.,Because the user's token is more likely to be vulnerable in this scenario.,Because the adversary can impersonate the user without needing to interact with the network.,The text explicitly states that Token Impersonation/Theft can be useful when the target user has a non-network logon session, as the adversary can impersonate the user without needing to interact with the network.,
The provided mitigation strategy advises limiting user permissions to prevent token creation. Which specific Group Policy setting should be configured to enforce this limitation?,Computer Configuration > [Policies] > Windows Settings > Security Settings > Local Policies > User Rights Assignment: Create a token object,Computer Configuration > [Policies] > Windows Settings > Security Settings > Local Policies > User Rights Assignment: Replace a process level token,Computer Configuration > [Policies] > Windows Settings > Security Settings > Local Policies > User Rights Assignment: Impersonate a client after authentication,Computer Configuration > [Policies] > Windows Settings > Security Settings > Local Policies > User Rights Assignment: Logon locally,Computer Configuration > [Policies] > Windows Settings > Security Settings > Local Policies > User Rights Assignment: Create a token object,The text specifically mentions the Group Policy setting "Create a token object" under Computer Configuration > [Policies] > Windows Settings > Security Settings > Local Policies > User Rights Assignment for limiting user permissions to prevent token creation.,
The text recommends using the "runas" command to run tools with administrator privileges while logged in as a standard user. What is the primary benefit of this approach in mitigating Token Impersonation/Theft?,It ensures that user processes do not inherit administrator privileges by default.,It provides a controlled environment for executing administrator-level tasks without granting permanent administrator access to the user.,It prevents adversaries from directly manipulating the user's access token.,It makes it harder for adversaries to identify and exploit administrator accounts.,It provides a controlled environment for executing administrator-level tasks without granting permanent administrator access to the user.,The text explicitly states that administrators should log in as standard users and use "runas" to run tools with administrator privileges, effectively mitigating Token Impersonation/Theft by controlling the execution environment.,
The text suggests monitoring for API calls associated with suspicious behavior to detect Token Impersonation/Theft. Which API call is NOT explicitly mentioned as being relevant for this detection approach?,NtFilterToken,ImpersonateLoggedOnUser,SetThreadToken,DuplicateTokenEx,NtFilterToken,The text explicitly mentions DuplicateToken(Ex), ImpersonateLoggedOnUser, and SetThreadToken as API calls relevant for detection, while NtFilterToken is not mentioned in this context.,
What is the recommended approach for mitigating Token Impersonation/Theft, as stated in the provided text?,Restricting user accounts to the least privileges necessary.,Disabling the use of the "runas" command for administrator tasks.,Configuring the "Create a token object" Group Policy setting for all users.,Disabling the DuplicateToken and DuplicateTokenEx API calls.,Restricting user accounts to the least privileges necessary.,The text emphasizes the importance of limiting user accounts to the least privileges they require as a primary mitigation strategy for Token Impersonation/Theft.,