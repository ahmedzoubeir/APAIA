import requests
from bs4 import BeautifulSoup
import csv
import time

def extract_description_and_cwe(url):
    try:
        response = requests.get(url, timeout=10)  # Added timeout
        response.raise_for_status()  # Raise an exception for HTTP errors
        soup = BeautifulSoup(response.content, "html.parser")

        # Extract description
        description_tag = soup.find("p", {"data-testid": "vuln-description"})
        description = description_tag.text.strip() if description_tag else "No description found"

        # Extract CWE ID
        cwe_table = soup.find("table", {"data-testid": "vuln-CWEs-table"})
        cwe_id = cwe_table.find("td").text.strip() if cwe_table else "No CWE ID found"

        return description, cwe_id
    except Exception as e:
        print(f"Error fetching data from {url}: {e}")
        return "No description found", "No CWE ID found"

def save_descriptions_and_cwe_to_csv(start, end):
    with open('cve_descriptions.csv', mode='w', newline='', encoding='utf-8') as file:
        writer = csv.writer(file)
        writer.writerow(['URL', 'Description', 'CWE_ID', 'Prompt'])  # Header

    for i in range(start, end + 1):
        cve_id = f"{i:04d}"  # Format CVE ID with leading zeros
        url = f"https://nvd.nist.gov/vuln/detail/CVE-2024-{cve_id}"
        print(f"Processing {url}...")

        description, cwe_id = extract_description_and_cwe(url)
        prompt = f"""
        You are a cybersecurity expert. Given the following vulnerability description, identify the appropriate CWE category.
        Return only the CWE ID and name. If multiple CWE IDs apply, provide the most relevant one.

        Description:
        {description}
        """

        print(f"Description found: {description[:100]}...")  # Print first 100 characters of description

        with open('cve_descriptions_rest.csv', mode='a', newline='', encoding='utf-8') as file:
            writer = csv.writer(file)
            writer.writerow([url, description, cwe_id, prompt])

        # Sleep to avoid hitting rate limits or overloading the server
        time.sleep(2)

# Example usage
save_descriptions_and_cwe_to_csv(25000, 30001)  # Change the range as needed
